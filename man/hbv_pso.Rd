% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hbv-pso.R
\name{hbv_pso}
\alias{hbv_pso}
\title{HBV Modelling with Particle Swarm Optimization}
\usage{
hbv_pso(
  prec = NULL,
  airt = NULL,
  ep = NULL,
  area = 1,
  param = hbvPSO::tuwmodel_params_default,
  obs = NULL,
  from = NULL,
  to = NULL,
  warmup = 0,
  incon = NULL,
  outpath = NULL,
  hydroPSO_args = NULL,
  FUN_gof = hydroGOF::NSE,
  FUN_gof_args = NULL,
  plotting = FALSE
)
}
\arguments{
\item{prec}{Precipitation input (mm/day) as zoo, matrix or numerical. If multivariate, each variable is the input for one zone.}

\item{airt}{Air Temperature input (degC/day) as zoo, matrix or numerical. If multivariate, each variable is the input for one zone.}

\item{ep}{Potential Evapotranspiration (mm/day) as zoo, matrix or numerical. If multivariate, each variable is the input for one zone.}

\item{area}{If input data is distributed into zones (multivariate zoo/matrix), a vector of the decimal proportion of area for each zone.}

\item{obs}{Observed Discharge (mm/day) as zoo or numerical}

\item{from}{Start of the modelling period (including warmup) as Date or string in standard date format. Requires input datasets to be zoo objects.}

\item{to}{End of the modelling period as Date or string in standard date format. Requires input datasets to be zoo objects.}

\item{warmup}{Warmup phase which is removed before calculating goodness of fit. Can be given as numeric (days removed from the model start date) or date (as Date object or string in default format which can be cast to Date by as.Date). If given as date, it marks the start of the simulation period after warmup.}

\item{incon}{vector/matrix of initial conditions for the model (\code{ncol} = number of zones):
\code{SSM0} soil moisture (mm);
\code{SWE0} snow water equivalent (mm);
\code{SUZ0} initial value for fast (upper zone) response storage (mm);
\code{SLZ0} initial value for slow (lower zone) response storage (mm)}

\item{outpath}{Path to the directory storing the output files as string. If not NULL, the following is set in in hydroPSO's control list: \code{drty.out=outpath} and \code{write2disk=TRUE}}

\item{hydroPSO_args}{Arguments passed on to \link[hydroPSO]{hydroPSO}}

\item{FUN_gof}{The function used to calculate goodness of fit. Must take sim and obs as first arguments.}

\item{FUN_gof_args}{Further arguments passed on to \code{FUN_gof}}

\item{plotting}{Toggles plotting of the results (with \link[hydroPSO]{plot_results} if optimization is performed, otherwise with \link[hydroPSO]{plot_out}). As alternative to \code{TRUE}, a list of arguments for the respective plotting functions can be provided.}
}
\value{
A list of the following items:
\enumerate{
\item \code{sim} simulated runoff (mm/day) of the best model run
\item \code{obs} observed runoff (mm/day)
\item \code{gof} goodness of fit of the best model run
\item \code{pso_out} \link[hydroPSO]{hydroPSO} output
\item \code{hbv_out} \link[TUWmodel]{TUWmodel} output from the best model run
}
}
\description{
Performs particle swarm optimization of the HBV hydrological model by wrapping \link[hydroPSO]{hydroPSO} and \link[TUWmodel]{TUWmodel}.
}
\examples{
\dontrun{
# loading the example data from TUWmodel
data(example_TUWmodel, package="TUWmodel")
# extracting the input data for the lumped case (see TUWmodel examples):
# 1.) apply weighted means
prec <- apply(P_Vils, 1, weighted.mean, w=areas_Vils)
airt <- apply(T_Vils, 1, weighted.mean, w=areas_Vils)
ep <- apply(PET_Vils, 1, weighted.mean, w=areas_Vils)
# 2.) casting from named numeric vector to zoo
prec <- zoo(prec, order.by=as.Date(names(prec)))
airt <- zoo(airt, order.by=as.Date(names(airt)))
ep <- zoo(ep, order.by=as.Date(names(ep)))
obs <- zoo(Q_Vils, order.by=as.Date(names(Q_Vils)))
# setting up date range and warmup, limit max iterations to 500
control <- list(maxit=500)
from <- "1976-01-01"
to <- "1996-12-31"
warmup <- "1977-01-01"
# running hbv_PSO with default options, without plotting or parallel processing
res <- hbv_pso(prec=prec, airt=airt, ep=ep, obs=obs,hydroPSO_args = list(control=control))
}
}
